!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==typeof c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], ["7","4"], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic("2", [], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    (function (FileType) {
        FileType[FileType["file"] = 0] = "file";
        FileType[FileType["dir"] = 1] = "dir";
    })(exports.FileType || (exports.FileType = {}));
    var FileType = exports.FileType;
    var TreeNode = function () {
        function TreeNode(params, parent) {
            var _this = this;
            if (parent === void 0) {
                parent = null;
            }
            this.name = params.name;
            this.type = params.type || FileType.file;
            this.children = [];
            // update private values
            this.parentNode = parent;
            this._isFocused = params.focus || false;
            this._isExpanded = this.type === FileType.dir || this.children.length > 0;
            if (parent !== null) {
                var parentPath = this.parentNode.getFullPath();
                if (parentPath.slice(-1) === '/') {
                    this.fullFilepath = "" + parentPath + this.name;
                } else {
                    this.fullFilepath = parentPath + "/" + this.name;
                }
            } else {
                this.fullFilepath = this.name;
            }
            if (typeof params.children !== 'undefined' && params.children !== null) {
                params.children.forEach(function (fileNodeParams) {
                    return _this.children.push(new TreeNode(fileNodeParams, _this));
                });
            }
        }
        TreeNode.prototype.getFullPath = function () {
            return this.fullFilepath;
        };
        TreeNode.prototype.isDir = function () {
            return this.type === FileType.dir || this.children.length > 0;
        };
        TreeNode.prototype.getParentNode = function () {
            return this.parentNode;
        };
        TreeNode.prototype.isExpanded = function () {
            return this._isExpanded;
        };
        TreeNode.prototype.expand = function () {
            this._isExpanded = true;
        };
        TreeNode.prototype.fold = function () {
            this._isExpanded = false;
        };
        TreeNode.prototype.hasParent = function () {
            return this.getParentNode !== null;
        };
        TreeNode.prototype.focus = function () {
            this._isFocused = true;
        };
        TreeNode.prototype.blur = function () {
            this._isFocused = false;
        };
        TreeNode.prototype.stringify = function () {
            return JSON.stringify(this, function (key, value) {
                if (key.includes('_')) return;
                return value;
            });
        };
        return TreeNode;
    }();
    exports.TreeNode = TreeNode;
    return module.exports;
});
$__System.registerDynamic('3', ['4', '2'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('4');
    var core_2 = $__require('4');
    var core_3 = $__require('4');
    var core_4 = $__require('4');
    var core_5 = $__require('4');
    var tree_node_1 = $__require('2');
    var tree_node_2 = $__require('2');
    var DIRECTORY_TREE_TEMPLATE = "\n<ul class=\"file-tree\">\n  <node [node]=\"root\" (clicked)=\"fileTreeClicked($event)\"></node>\n</ul>\n";
    var DIRECTORY_TREE_STYLE = "\n.file-tree { padding: 0; }\n";
    var FileTreeComponent = function () {
        function FileTreeComponent(_eref) {
            this._eref = _eref;
            this.onChange = new core_2.EventEmitter();
            this.keyboardWatch = false;
        }
        FileTreeComponent.prototype.ngOnInit = function () {
            this.root = new tree_node_1.TreeNode({ name: '/', type: tree_node_2.FileType.dir });
            this.currFocusNode = null;
        };
        FileTreeComponent.prototype.ngOnChanges = function (changes) {
            if (typeof changes['tree'].currentValue !== 'undefined') {
                this.root = this.tree;
            }
        };
        FileTreeComponent.prototype.fileTreeClicked = function (nextNode) {
            this.updateFocusNode(nextNode);
            this.onChange.emit(nextNode);
        };
        FileTreeComponent.prototype.keydownHandler = function (event) {
            if (!this.keyboardWatch) return;
            if (this.currFocusNode === null) return;
            switch (event.keyCode) {
                case 13:
                    this.onChange.emit(this.currFocusNode);
                    break;
                case 37:
                    if (this.currFocusNode.isDir() && this.currFocusNode.isExpanded) {
                        this.currFocusNode.fold();
                        return;
                    }
                    if (!this.currFocusNode.hasParent()) return;
                    this.updateFocusNode(this.currFocusNode.getParentNode());
                    break;
                case 38:
                    // Move to upper item
                    break;
                case 39:
                    if (!this.currFocusNode.isDir()) return;
                    if (!this.currFocusNode.isExpanded) {
                        this.currFocusNode.expand();
                    } else if (this.currFocusNode.children.length > 0) {
                        this.updateFocusNode(this.currFocusNode.children[0]);
                    }
                    break;
                case 40:
                    if (this.currFocusNode.isDir() && this.currFocusNode.isExpanded && this.currFocusNode.children.length > 0) {
                        // first child
                        this.updateFocusNode(this.currFocusNode.children[0]);
                    } else {}
                    break;
            }
        };
        FileTreeComponent.prototype.updateFocusNode = function (next) {
            if (this.currFocusNode) {
                this.currFocusNode.blur();
            }
            this.currFocusNode = next;
            this.currFocusNode.focus();
        };
        FileTreeComponent.decorators = [{ type: core_1.Component, args: [{
                selector: 'file-tree',
                template: DIRECTORY_TREE_TEMPLATE,
                styles: [DIRECTORY_TREE_STYLE],
                host: {
                    '(window:keydown)': 'keydownHandler($event)'
                }
            }] }];
        /** @nocollapse */
        FileTreeComponent.ctorParameters = [{ type: core_3.ElementRef }];
        FileTreeComponent.propDecorators = {
            'tree': [{ type: core_4.Input }],
            'keyboardWatch': [{ type: core_4.Input }],
            'onChange': [{ type: core_5.Output }]
        };
        return FileTreeComponent;
    }();
    exports.FileTreeComponent = FileTreeComponent;
    return module.exports;
});
$__System.registerDynamic('5', ['4'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('4');
    var core_2 = $__require('4');
    var core_3 = $__require('4');
    var core_4 = $__require('4');
    var NODE_COMPONENT_TEMPLATE = "\n<li *ngIf=\"isExpandable()\" class=\"all-item\">\n    <a (click)=\"clickItem(node)\"\n       class=\"folder-item\"\n       [ngClass]=\"{focus: node._focus}\">\n        <div style=\"white-space: nowrap\">\n            <span class=\"point\" (click)=\"expandFolder()\">\n                <i class=\"fa fa-fw fa-caret-right\" *ngIf=\"!isExpanded()\"></i>\n                <i class=\"fa fa-fw fa-caret-down\" *ngIf=\"isExpanded()\"></i>\n            </span>\n\n            <i class=\"fa fa-folder-o\" *ngIf=\"!isExpanded()\"></i>\n            <i class=\"fa fa-folder-open-o\" *ngIf=\"isExpanded()\"></i>\n            {{ node.name }}\n        </div>\n    </a>\n\n    <ul *ngIf=\"isExpanded()\" class=\"children-items\">\n        <node *ngFor=\"let n of node.children\" [node]=\"n\" (clicked)=\"propagate($event)\"></node>\n    </ul>\n</li>\n\n<li *ngIf=\"!isExpandable()\" class=\"all-item\">\n    <a (click)=\"clickItem(node)\"\n       class=\"file-item\"\n       [ngClass]=\"{focus: node._focus}\">\n       <div style=\"white-space: nowrap\">\n           <i class=\"fa fa-file-o\"></i> {{ node.name }}\n       </div>\n    </a>\n</li>\n";
    var DIRECTORY_TREE_STYLE = "\n.all-item {\n  list-style-type: none;\n  display:inline;\n}\n.folder-item { }\n.file-item { padding-left: 0px; }\n.children-items {\n  padding-left: 25px;\n}\n.focus { color: steelblue }\n";
    var NodeComponent = function () {
        function NodeComponent() {
            this.clicked = new core_4.EventEmitter();
        }
        NodeComponent.prototype.isExpandable = function () {
            var isDirectory = this.node.isDir();
            return isDirectory;
        };
        NodeComponent.prototype.isExpanded = function () {
            return this.node.isExpanded();
        };
        NodeComponent.prototype.expandFolder = function () {
            if (this.node.isExpanded()) {
                this.node.fold();
            } else {
                this.node.expand();
            }
        };
        NodeComponent.prototype.clickItem = function (node) {
            this.clicked.emit(node);
        };
        NodeComponent.prototype.propagate = function (node) {
            this.clicked.emit(node);
        };
        NodeComponent.decorators = [{ type: core_1.Component, args: [{
                selector: 'node',
                template: NODE_COMPONENT_TEMPLATE,
                styles: [DIRECTORY_TREE_STYLE]
            }] }];
        /** @nocollapse */
        NodeComponent.ctorParameters = [];
        NodeComponent.propDecorators = {
            'node': [{ type: core_2.Input }],
            'index': [{ type: core_2.Input }],
            'clicked': [{ type: core_3.Output }]
        };
        return NodeComponent;
    }();
    exports.NodeComponent = NodeComponent;
    return module.exports;
});
$__System.registerDynamic('6', ['4', '7', '3', '5'], true, function ($__require, exports, module) {
    "use strict";

    var define,
        global = this || self,
        GLOBAL = global;
    var core_1 = $__require('4');
    var common_1 = $__require('7');
    var file_tree_component_1 = $__require('3');
    var node_component_1 = $__require('5');
    var Ng2FileTreeModule = function () {
        function Ng2FileTreeModule() {}
        Ng2FileTreeModule.decorators = [{ type: core_1.NgModule, args: [{
                imports: [common_1.CommonModule],
                declarations: [file_tree_component_1.FileTreeComponent, node_component_1.NodeComponent],
                exports: [file_tree_component_1.FileTreeComponent, node_component_1.NodeComponent]
            }] }];
        /** @nocollapse */
        Ng2FileTreeModule.ctorParameters = [];
        return Ng2FileTreeModule;
    }();
    exports.Ng2FileTreeModule = Ng2FileTreeModule;
    return module.exports;
});
$__System.registerDynamic('1', ['2', '6'], true, function ($__require, exports, module) {
  "use strict";

  var define,
      global = this || self,
      GLOBAL = global;
  var tree_node_1 = $__require('2');
  exports.FileType = tree_node_1.FileType;
  var tree_node_2 = $__require('2');
  exports.TreeNode = tree_node_2.TreeNode;
  var index_1 = $__require('6');
  exports.Ng2FileTreeModule = index_1.Ng2FileTreeModule;
  return module.exports;
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define(["@angular/common","@angular/core"], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory(require("@angular/common"), require("@angular/core"));
  else
    throw new Error("Module must be loaded as AMD or CommonJS");
});