"use strict";
var core_1 = require('@angular/core');
var core_2 = require('@angular/core');
var core_3 = require('@angular/core');
var core_4 = require('@angular/core');
var NODE_COMPONENT_TEMPLATE = "\n<li *ngIf=\"isExpandable()\" class=\"all-item\">\n    <a (click)=\"clickItem(node)\"\n       class=\"folder-item\"\n       [ngClass]=\"{focus: node._focus}\">\n        <div style=\"white-space: nowrap\">\n            <span class=\"point\" (click)=\"expandFolder()\">\n                <i class=\"fa fa-fw fa-caret-right\" *ngIf=\"!isExpanded()\"></i>\n                <i class=\"fa fa-fw fa-caret-down\" *ngIf=\"isExpanded()\"></i>\n            </span>\n\n            <i class=\"fa fa-folder-o\" *ngIf=\"!isExpanded()\"></i>\n            <i class=\"fa fa-folder-open-o\" *ngIf=\"isExpanded()\"></i>\n            {{ node.name }}\n        </div>\n    </a>\n\n    <ul *ngIf=\"isExpanded()\" class=\"children-items\">\n        <node *ngFor=\"let n of node.children\" [node]=\"n\" (clicked)=\"propagate($event)\"></node>\n    </ul>\n</li>\n\n<li *ngIf=\"!isExpandable()\" class=\"all-item\">\n    <a (click)=\"clickItem(node)\"\n       class=\"file-item\"\n       [ngClass]=\"{focus: node._focus}\">\n       <div style=\"white-space: nowrap\">\n           <i class=\"fa fa-file-o\"></i> {{ node.name }}\n       </div>\n    </a>\n</li>\n";
var DIRECTORY_TREE_STYLE = "\n.all-item {\n  list-style-type: none;\n  display:inline;\n}\n.folder-item { }\n.file-item { padding-left: 0px; }\n.children-items {\n  padding-left: 25px;\n}\n.focus { color: steelblue }\n";
var NodeComponent = (function () {
    function NodeComponent() {
        this.clicked = new core_4.EventEmitter();
    }
    NodeComponent.prototype.isExpandable = function () {
        var isDirectory = this.node.isDir();
        return isDirectory;
    };
    NodeComponent.prototype.isExpanded = function () {
        return this.node.isExpanded();
    };
    NodeComponent.prototype.expandFolder = function () {
        if (this.node.isExpanded()) {
            this.node.fold();
        }
        else {
            this.node.expand();
        }
    };
    NodeComponent.prototype.clickItem = function (node) {
        this.clicked.emit(node);
    };
    NodeComponent.prototype.propagate = function (node) {
        this.clicked.emit(node);
    };
    NodeComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'node',
                    template: NODE_COMPONENT_TEMPLATE,
                    styles: [DIRECTORY_TREE_STYLE]
                },] },
    ];
    /** @nocollapse */
    NodeComponent.ctorParameters = [];
    NodeComponent.propDecorators = {
        'node': [{ type: core_2.Input },],
        'index': [{ type: core_2.Input },],
        'clicked': [{ type: core_3.Output },],
    };
    return NodeComponent;
}());
exports.NodeComponent = NodeComponent;
